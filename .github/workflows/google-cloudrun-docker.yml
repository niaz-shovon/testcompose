name: Cloud Run

on:
  push:
    branches:
      - main
  pull_request:

env:
  PROJECT_ID: serverless-411207
  REGION: asia-southeast1
  REPOSITORY_ID: bdj-serverless-ci-cd-docker-repo
  VPC_CONNECTORS_ID: bdjserverlessvpcconnector
  GCP_SA_KEY: ${{ secrets.SERVERLESS_411207_C41760532440 }}

jobs:
  build-tag-push-deploy:
    name: Prepare, Build, Push Docker image and Deploy to Cloud Run
    runs-on: ubuntu-latest
    environment: Production

    steps:
      # Continuous Integration
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        id: prep
        run: |
          VERSION="${{ github.run_number }}"
          REGISTRY="${REGION}-docker.pkg.dev"
          REPOSITORY="${REGISTRY}/${PROJECT_ID}/${REPOSITORY_ID}"
          echo "registry=${REGISTRY}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "repository=${REPOSITORY}" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "List of services: $(docker compose config --services)"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.prep.outputs.registry }}
          username: _json_key
          password: ${{ env.GCP_SA_KEY }}

      - name: Build and push images for all Docker Compose services
        run: |
          # Loop through all services in docker-compose.yml
          for SERVICE in $(docker compose config --services); do
            IMAGE="${{ steps.prep.outputs.repository }}/${SERVICE}"
            echo ${IMAGE}
            echo "Building and pushing image for service: $SERVICE -> $IMAGE"
            
            # Build and push the image for the service
            docker compose build $SERVICE
            docker tag $SERVICE $IMAGE
            docker push $IMAGE
          done

      # Continuous Deployment
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.GCP_SA_KEY }}
          token_format: 'access_token'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: '${{ env.PROJECT_ID }}'

      - name: Deploy each service to Cloud Run
        run: |
          # Deploy each service defined in docker-compose.yml to Cloud Run
          for SERVICE in $(docker compose config --services); do
            IMAGE="${{ steps.prep.outputs.repository }}/${SERVICE}"
            echo "Deploying service: $SERVICE to Cloud Run with image: $IMAGE"
            
            gcloud run deploy $SERVICE \
              --image=$IMAGE \
              --region=${{ env.REGION }} \
              --allow-unauthenticated \
              --vpc-connector=projects/${{ env.PROJECT_ID }}/locations/${{ env.REGION }}/connectors/${{ env.VPC_CONNECTORS_ID }} \
              --vpc-egress=all-traffic \
              --set-env-vars=ASP_NET_CORE=development
          done

      # Cloud Run URL output
      - name: Show Cloud Run Services
        run: |
          echo "Deployed services:"
          for SERVICE in $(docker compose config --services); do
            URL=$(gcloud run services describe $SERVICE --region=${{ env.REGION }} --format='value(status.url)')
            echo "$SERVICE -> $URL"
          done
