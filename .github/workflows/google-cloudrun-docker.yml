name: Cloud Run

on:
  push:
    branches:
      - main
  pull_request:

env:
  DOCKER_IMAGE: testcompose1
  PROJECT_ID: serverless-411207
  REGION: asia-southeast1
  REPOSITORY_ID: bdj-serverless-ci-cd-docker-repo
  GCP_SA_KEY: ${{ secrets.SERVERLESS_411207_C41760532440 }}

jobs:
  build-tag-push-deploy:
    name: Build, tag, push Docker image and deploy to Cloud Run
    runs-on: ubuntu-latest
    environment: Production

    steps:
      # Continuous Integration
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        id: prep
        run: |
          VERSION="${{ github.run_number }}"
          REGISTRY="${REGION}-docker.pkg.dev"
          REPOSITORY="${REGISTRY}/${PROJECT_ID}/${REPOSITORY_ID}"
          TAG_APP1="${REPOSITORY}/app1:${VERSION}"
          TAG_APP2="${REPOSITORY}/app2:${VERSION}"
          TAG_APP3="${REPOSITORY}/app3:${VERSION}"
          echo "registry=${REGISTRY}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag_app1=${TAG_APP1}" >> $GITHUB_OUTPUT
          echo "tag_app2=${TAG_APP2}" >> $GITHUB_OUTPUT
          echo "tag_app3=${TAG_APP3}" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.prep.outputs.registry }}
          username: _json_key
          password: ${{ env.GCP_SA_KEY }}

#      - name: Build and push app1 image
#        run: |
#          docker build ./app1 -t ${{ steps.prep.outputs.tag_app1 }}
#          docker push ${{ steps.prep.outputs.tag_app1 }}

#      - name: Build and push app2 image
#        run: |
#          docker build ./app2 -t ${{ steps.prep.outputs.tag_app2 }}
#          docker push ${{ steps.prep.outputs.tag_app2 }}

#      - name: Build and push app3 image
#        run: |
#          docker build ./app3 -t ${{ steps.prep.outputs.tag_app3 }}
#          docker push ${{ steps.prep.outputs.tag_app3 }}

      - name: Deploy with Docker Compose
        run: |
          docker compose -f docker-compose.yml up -d

      # Continuous Deployment
#      - name: Google Auth
#       id: auth
#        uses: google-github-actions/auth@v2
#        with:
#          credentials_json: ${{ env.GCP_SA_KEY }}
#          token_format: 'access_token'

#      - name: Set up Cloud SDK
#        uses: google-github-actions/setup-gcloud@v2
#        with:
#          project_id: '${{ env.PROJECT_ID }}'

#      - name: Deploy to Cloud Run
#        id: deploy
#        uses: google-github-actions/deploy-cloudrun@v2
#        with:
#          service: ${{ env.DOCKER_IMAGE }}
#          region: ${{ env.REGION }}
#          flags: --allow-unauthenticated --vpc-connector=projects/serverless-411207/locations/asia-southeast1/connectors/bdjserverlessvpcconnector --vpc-egress=all-traffic --set-env-vars=ASP_NET_CORE=development
          # NOTE: If using a pre-built image, update the image name here
#          image: ${{ steps.prep.outputs.tag_app1 }}

      # Cloud Run URL output
#      - name: Show Output
#        run: echo ${{ steps.deploy.outputs.url }}
